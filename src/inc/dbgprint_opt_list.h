
/*
Abstract:

  Include this header for generic manipulations with options.
  Available actions:
  DBGPRINT_OPT_STRUCT            - declare option structure members
  DBGPRINT_OPT_RAW_STRUCT        - declare option structure members without grouping
  DBGPRINT_OPT_RAW_INIT          - init ungroupped structure with defaults
  DBGPRINT_DRV_OPT_RAW_INIT      - init driver-specific defaults only
  DBGPRINT_DRV_OPT_RAW_RECOGNIZE - recognize current driver option name
  DBGPRINT_DRV_OPT_RAW_WRITE_REG - store driver options in registry
  DBGPRINT_DRV_OPT_RAW_READ_REG  - read driver options from registry

  DBGPRINT_OPT_MACRO_UNDEF       - undefine temporary macros generated by
                                   previous options

Requirements:

  -- General --

  1. define or declare pOpt as pointer to option structure.
     this pointer must be of type PDBGDUMP_OPT_RAW.
     If you use structured version of option structure - DBGDUMP_OPT,
     simply type-cast pointer (e.g.
       #define pOpt ((PDBGDUMP_OPT_RAW)&opt)
     where opt is declared as
       DBGDUMP_OPT opt;

     or
       #define pOpt ((PDBGDUMP_OPT_RAW)opt)
     where opt is declared as
       PDBGDUMP_OPT opt;
     )

  -- Driver Option recognition specific --

  2. for parsing driver options in command line ensure that:
     2.1 'argv' is declared as PWCHAR[]
     2.2 'i' is declared as int
     2.3 'i' is index of the element of argv[] containing option name

  -- Driver Option registry manipulations specific --

  3. to read/write driver options from/to registry ensure that:
     2.1 'k' and 't' are declared as ULONG and available for
         modification
     2.2 hKey is declared as HKEY and initialized with handle to NT_DBGPRNHK_REG_PATH

Usage example:

  1. structure definition

     typedef struct _DBGDUMP_OPT {

         // generate member definitions
         #define DBGPRINT_OPT_STRUCT
         #include "dbgprint_opt_list.h"

         // undefine temporary macros
         #define DBGPRINT_OPT_MACRO_UNDEF
         #include "dbgprint_opt_list.h"

     } DBGDUMP_OPT, *PDBGDUMP_OPT;

  2. structure init

    #define pOpt     opt

    if(Reinit) {
        #define DBGPRINT_DRV_OPT_RAW_INIT
        #include "dbgprint_opt_list.h"
        // undefine temporary macros
        #define DBGPRINT_OPT_MACRO_UNDEF
        #include "dbgprint_opt_list.h"
    }

*/

#include "dbgprint_opt_sup.h"

#ifndef DBGPRINT_OPT_MACRO_UNDEF

    /*****************/
    DBGPRINT_OPT_SECTION_BEGIN(general)

        DBGPRINT_OPT(ULONG, svc_mode, SERVICE_AUTO_START)
        DBGPRINT_OPT(ULONG, drv_mode, SERVICE_DEMAND_START)
        DBGPRINT_OPT(PWCHAR, WDir, NULL)
        DBGPRINT_OPT(PWCHAR, LogFile, L"DbgPrint.log")
        DBGPRINT_OPT(BOOLEAN, restart_drv, FALSE) // driver must be reinstalled before starting log
        DBGPRINT_OPT(BOOLEAN, change_config, FALSE)

        /* flags for internal use by DbgPrintLog.exe */
        DBGPRINT_OPT(BOOLEAN, install_svc, FALSE) // svc_mode must be used to (re)install service
        DBGPRINT_OPT(BOOLEAN, install_drv, FALSE) // drv_mode must be used to (re)install driver
        DBGPRINT_OPT(BOOLEAN, drv_very_first, FALSE) // driver must be installed with '-drv 1'
        DBGPRINT_OPT(BOOLEAN, display_status, FALSE) // display status of driver, service and other components
        DBGPRINT_OPT(ULONG,   user_run, 0)        // run as plain user, regardless of System Account check

    DBGPRINT_OPT_SECTION_END(general)

    /*****************/
    DBGPRINT_OPT_SECTION_BEGIN(format)

        DBGPRINT_OPT(BOOLEAN, log_mode,       FALSE)
        DBGPRINT_OPT(BOOLEAN, log_pid,        FALSE)   // Process Id
        DBGPRINT_OPT(BOOLEAN, log_tid,        FALSE)   // Thread Id
        DBGPRINT_OPT(BOOLEAN, log_irql,       FALSE)
        DBGPRINT_OPT(BOOLEAN, log_cpu,        FALSE)
        DBGPRINT_OPT(BOOLEAN, log_sfp,        FALSE)
        DBGPRINT_OPT(BOOLEAN, log_pname,      FALSE)

        DBGPRINT_OPT(BOOLEAN, log_time_date,  FALSE)
        DBGPRINT_OPT(BOOLEAN, log_time_time,  TRUE)
        DBGPRINT_OPT(BOOLEAN, log_time_nano,  FALSE)
        DBGPRINT_OPT(BOOLEAN, log_time_perf,  FALSE)

        DBGPRINT_OPT(BOOLEAN, log_time_utc,   FALSE)

        DBGPRINT_OPT(ULONG,   MaxLogSize,     128)   //  Mbytes
        DBGPRINT_OPT(BOOLEAN, prealloc_mode,  FALSE)
        DBGPRINT_OPT(BOOLEAN, use_index,      FALSE)
        DBGPRINT_OPT(ULONG,   MaxLogs,        -1)    // -1 - unlimited
        DBGPRINT_OPT(ULONG,   StartLogNum,    0)     // 0 - default
        DBGPRINT_OPT(BOOLEAN, overwrite_old,  FALSE)

        DBGPRINT_OPT(ULONG,   FlushTimeout,   5)     // seconds, 5 by default
        DBGPRINT_OPT(BOOLEAN, sync_mode,      FALSE)
        DBGPRINT_OPT(BOOLEAN, without_driver, FALSE) // driver shall not be used, only OutputDebugString() is available

        DBGPRINT_OPT(BOOLEAN, nowait_msg,     FALSE) // just save already stored messages

        DBGPRINT_OPT(BOOLEAN, raw_mode,       FALSE) // write messages in raw format, doesn't affect syslog stream

        /* flags for internal use by DbgPrintLog.exe */
        DBGPRINT_OPT(BOOLEAN, log_time_ext,   TRUE) // human-readable time format present

    DBGPRINT_OPT_SECTION_END(format)

    /*****************/
    DBGPRINT_OPT_SECTION_BEGIN(filter)

        DBGPRINT_OPT(BOOLEAN, skip_kernel,    FALSE)
        DBGPRINT_OPT(BOOLEAN, skip_umode,     FALSE)
        DBGPRINT_OPT(BOOLEAN, skip_header,    FALSE)

        DBGPRINT_OPT(BOOLEAN, output_stdout,  FALSE)
        DBGPRINT_OPT(BOOLEAN, output_file,    FALSE)
        DBGPRINT_OPT(BOOLEAN, output_syslog,  FALSE)
        DBGPRINT_OPT(BOOLEAN, output_none,    FALSE)

        DBGPRINT_OPT(BOOLEAN, input_driver,   TRUE)
        DBGPRINT_OPT(BOOLEAN, input_stdin,    FALSE)
        DBGPRINT_OPT(BOOLEAN, input_file,     FALSE)
        DBGPRINT_OPT(PWCHAR,  input_FileName, NULL)
        DBGPRINT_OPT(BOOLEAN, input_comdbg,   FALSE)
        DBGPRINT_OPT(BOOLEAN, input_syslog,   FALSE)

        DBGPRINT_OPT(ULONG,   input_comdbg_port, 1)
        DBGPRINT_OPT(ULONG,   input_comdbg_baud, 115200)
        DBGPRINT_OPT(BOOLEAN, input_comdbg_int3, FALSE)

        DBGPRINT_OPT(PWCHAR,  input_syslog_HostName, NULL)
        DBGPRINT_OPT(ULONG,   input_syslog_mtu, 1024)

        DBGPRINT_OPT(PWCHAR,  output_syslog_HostName, NULL)
        DBGPRINT_OPT(ULONG,   output_syslog_mtu, 1024)

        /* for internal use by DbgPrintLog.exe */
        DBGPRINT_OPT(ULONG,   output_syslog_port, 514)
        DBGPRINT_OPT(SOCKET,  output_syslog_sock, 0)
        DBGPRINT_OPT_DECL(sockaddr_in,  output_syslog_dst)

        DBGPRINT_OPT(ULONG,   input_syslog_port, 514)
        DBGPRINT_OPT(SOCKET,  input_syslog_sock, 0)
        DBGPRINT_OPT_DECL(sockaddr_in,  input_syslog_src)

        DBGPRINT_OPT(BOOLEAN, output_specified,    FALSE) // at lease one output stream ise defined explicitly

    DBGPRINT_OPT_SECTION_END(filter)

    /*****************/
    DBGPRINT_OPT_SECTION_BEGIN(drv_opt)

        DBGPRINT_DRV_OPT(BOOLEAN, CheckIrql,             TRUE)
        DBGPRINT_DRV_OPT(BOOLEAN, BufferSize,            1024)
        DBGPRINT_DRV_OPT(UCHAR,   DoNotPassMessagesDown, DoNotPassMessages_Off)
        DBGPRINT_DRV_OPT(UCHAR,   StopOnBufferOverflow,  BufferOverflow_Continue)
        DBGPRINT_DRV_OPT(BOOLEAN, TimeStampType,         TimeStampType_RdtscPerfCounter)
        DBGPRINT_DRV_OPT(BOOLEAN, AggregateMessages,     FALSE)
        DBGPRINT_DRV_OPT(BOOLEAN, SuppressDuplicates,    TRUE)
        DBGPRINT_DRV_OPT(BOOLEAN, DumpToHalDisplay,      FALSE)
        DBGPRINT_DRV_OPT(BOOLEAN, DumpStackFramePtr,     FALSE)

        /* flags for internal use by DbgPrintLog.exe */
        DBGPRINT_OPT(BOOLEAN,     drv_opt,               FALSE) // driver options are valid and must be stored in registry

    DBGPRINT_OPT_SECTION_END(drv_opt)

    // undefine temporary macros
    #define DBGPRINT_OPT_MACRO_UNDEF
    #include "dbgprint_opt_list.h"

#else
  #undef DBGPRINT_OPT_MACRO_UNDEF
#endif //DBGPRINT_OPT_MACRO_UNDEF
